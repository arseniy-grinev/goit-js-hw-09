{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAwC3C,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAhDMN,SAASC,cAAc,SAO/BY,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAMC,EAAQC,OAAOlB,EAAWmB,OAC1BC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAIlC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnCjB,EAAciB,EADOL,GAASK,EAAI,GAAKF,GAEpCG,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBpB,QAAiBC,MAAW,CAC7CoB,QAAO,IAAOpB,OAGrBqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA1B,GAAS2B,OAAOI,QACd,sBAAoBvB,QAAeC,MAAW,CAC5CoB,QAAS,IAAOpB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelay = document.querySelector('[name=\"delay\"]');\nconst inputStep = document.querySelector('[name=\"step\"]');\nconst inputAmount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\n// console.log(inputDelay);\n// console.log(inputStep);\n// console.log(inputAmount);\n// console.log(form);\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const delay = Number(inputDelay.value);\n  const step = Number(inputStep.value);\n  const amount = Number(inputAmount.value);\n  // console.log(delay, step, amount);\n\n  \n  for (let i = 1; i <= amount; i += 1) {\n    const promiseDelay = delay + (i - 1) * step;\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`, {\n            timeout: 3000 + delay\n          });\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`, {\n            timeout: 3000 + delay\n          });\n      });\n  }\n}\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$inputDelay","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","timeout","catch","failure"],"version":3,"file":"03-promises.fc6cd13b.js.map"}